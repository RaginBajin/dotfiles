<<<<<<< HEAD
#!/usr/bin/env ruby

# to install, add the following line to your .bash_profile or .bashrc
# complete -C path/to/rake_completion -o default rake

# Rake completion will return matching rake tasks given typed text. This way
# you can auto-complete tasks as you are typing them by hitting [tab] or [tab][tab]
# This also caches the rake tasks for optimium speed
class RakeCompletion
  CACHE_FILE_NAME = '.rake_tasks~'
  
  def initialize(command)
    @command = command
  end
  
  def matches
    exit 0 if rakefile.nil?
    matching_tasks.map do |task|
      task.sub(typed_before_colon, '')
    end
  end
  
  private
  
  def typed
    @command[/\s(.+?)$/, 1] || ''
  end
  
  def typed_before_colon
    typed[/.+\:/] || ''
  end
  
  def matching_tasks
    all_tasks.select do |task|
      task[0, typed.length] == typed
    end
  end
  
  def all_tasks
    cache_current? ? tasks_from_cache : generate_tasks
  end
  
  def cache_current?
    File.exist?(cache_file) && File.mtime(cache_file) >= File.mtime(rakefile)
  end
  
  def rakefile
    ['rakefile', 'Rakefile', 'rakefile.rb', 'Rakefile.rb'].detect do |file|
      File.file? File.join(Dir.pwd, file)
    end
  end
  
  def cache_file
    File.join(Dir.pwd, CACHE_FILE_NAME)
  end
  
  def tasks_from_cache
    IO.read(cache_file).split
  end
  
  def generate_tasks
    tasks = `rake --tasks`.split("\n")[1..-1].collect {|line| line.split[1]}
    File.open(cache_file, 'w') { |f| f.write tasks.join("\n") }
    tasks
  end
end

puts RakeCompletion.new(ENV["COMP_LINE"]).matches
exit 0
=======
# bash completion for rake
#
# some code from on Jonathan Palardy's http://technotales.wordpress.com/2009/09/18/rake-completion-cache/
# and http://pastie.org/217324 found http://ragonrails.com/post/38905212/rake-bash-completion-ftw
# 
# For details and discussion
# http://turadg.aleahmad.net/2011/02/bash-completion-for-rake-tasks/
#
# INSTALL
#
# Place in your bash completions.d and/or source in your .bash_profile
# If on a Mac with Homebrew, try "brew install bash-completion"
# 
# USAGE
#
# Type 'rake' and hit tab twice to get completions.
# To clear the cache, run rake_cache_clear() in your shell.
#
 
function _rake_cache_path() {
  # If in a Rails app, put the cache in the cache dir
  # so version control ignores it
  if [ -e 'tmp/cache' ]; then
    prefix='tmp/cache/'
  fi
  echo "${prefix}.rake_t_cache"
}
 
function rake_cache_store() {
  rake --tasks --silent > "$(_rake_cache_path)"
}
 
function rake_cache_clear() {
  rm -f .rake_t_cache
  rm -f tmp/cache/.rake_t_cache
}
 
export COMP_WORDBREAKS=${COMP_WORDBREAKS/\:/}
 
function _rakecomplete() {
  # error if no Rakefile
  if [ ! -e Rakefile ]; then
    echo "missing Rakefile"
    return 1
  fi
 
  # build cache if missing
  if [ ! -e "$(_rake_cache_path)" ]; then
    rake_cache_store
  fi
 
  local tasks=`awk '{print $2}' "$(_rake_cache_path)"`
  COMPREPLY=($(compgen -W "${tasks}" -- ${COMP_WORDS[COMP_CWORD]}))
  return 0
}
>>>>>>> 979707349851e0bdff0270303f49f11dea9c2bbc
